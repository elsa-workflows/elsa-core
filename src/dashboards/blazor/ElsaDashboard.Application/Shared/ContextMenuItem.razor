<a @onclick:preventDefault @onclick="@OnClick" href="#" class="group flex items-center px-4 py-2 text-sm leading-5 text-gray-700 hover:bg-gray-100 hover:text-gray-900 focus:outline-none focus:bg-gray-100 focus:text-gray-900" role="menuitem">
    @if (ChildContent != null)
    {
        @ChildContent
    }
    else
    {
        <svg class="mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-500 group-focus:text-gray-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
            <path d="@Icon"/>
        </svg>
        @Text
    }
</a>

@code
{
    [Inject]
    private NavigationManager NavigationManager { get; set; }

    [Parameter]
    public string Text { get; set; } = default!;

    [Parameter]
    public string Icon { get; set; } = default!;

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public string? Url { get; set; }

    [Parameter]
    public EventCallback OnClick { get; set; }

    protected override void OnParametersSet()
    {
        if (Url != null)
            OnClick = new EventCallbackFactory().Create(this, Navigate);
    }

    private void Navigate() => NavigationManager.NavigateTo(Url!);
}