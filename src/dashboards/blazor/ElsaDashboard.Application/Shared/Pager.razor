@if (Page != null)
{
    <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6">
        <div class="flex-1 flex justify-between sm:hidden">
            @if (Page > 0)
            {
                <a href="#" class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm leading-5 font-medium rounded-md text-gray-700 bg-white hover:text-gray-500 focus:outline-none focus:shadow-outline-blue focus:border-blue-300 active:bg-gray-100 active:text-gray-700 transition ease-in-out duration-150">
                    Previous
                </a>
            }
            @if (Page < PageCount)
            {
                <a href="#" class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm leading-5 font-medium rounded-md text-gray-700 bg-white hover:text-gray-500 focus:outline-none focus:shadow-outline-blue focus:border-blue-300 active:bg-gray-100 active:text-gray-700 transition ease-in-out duration-150">
                    Next
                </a>
            }
        </div>
        <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
            <div>
                <p class="text-sm leading-5 text-gray-700">
                    Showing
                    <span class="font-medium">@From</span>
                    to
                    <span class="font-medium">@To</span>
                    of
                    <span class="font-medium">@TotalCount</span>
                    results
                </p>
            </div>
            <div>
                <nav class="relative z-0 inline-flex shadow-sm">
                    @if (Page > 0)
                    {
                        <a href="workflow-instances?page=@(Page - 1)&pageSize=@PageSize" class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150" aria-label="Previous">
                            <svg class="h-5 w-5" x-description="Heroicon name: chevron-left" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                            </svg>
                        </a>
                    }
                    @{
                        const int maxPageButtons = 10;
                        var fromPage = Math.Max(0, Page.Value - maxPageButtons / 2);
                        var toPage = Math.Min(PageCount, fromPage + maxPageButtons);
                    }
                    @RenderPageButtons(fromPage, toPage)
                    @if (Page < PageCount - 1)
                    {
                        <a href="workflow-instances?page=@(Page + 1)&pageSize=@PageSize" class="-ml-px relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-500 hover:text-gray-400 focus:z-10 focus:outline-none focus:border-blue-300 focus:shadow-outline-blue active:bg-gray-100 active:text-gray-500 transition ease-in-out duration-150" aria-label="Next">
                            <svg class="h-5 w-5" x-description="Heroicon name: chevron-right" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                            </svg>
                        </a>
                    }
                </nav>
            </div>
        </div>
    </div>
}

@code {

    private RenderFragment RenderPageButtons(int start, int end)
    {
        return
            @<text>
                @for (var i = start; i < end; i++)
                {
                    var isCurrent = Page == i;
                    var isFirst = i == start;
                    var isLast = i == end - 1;
                    var leftRoundedClass = isFirst && isCurrent ? "rounded-l-md" : "";
                    var rightRoundedClass = isLast && isCurrent ? "rounded-r-md" : "";
                    if (isCurrent)
                    {
                        <span class="-ml-px relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm leading-5 font-medium bg-blue-600 text-white @leftRoundedClass @rightRoundedClass">
                            @(i + 1)
                        </span>
                    }
                    else
                    {
                        <a href="workflow-instances?page=@(i)&pageSize=@PageSize" class="-ml-px relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm leading-5 font-medium text-gray-700 hover:text-gray-500 focus:z-10 focus:outline-none active:bg-gray-100 active:text-gray-700 transition ease-in-out duration-150 @leftRoundedClass">
                            @(i + 1)
                        </a>
                    }
                }
             </text>;
    }

}