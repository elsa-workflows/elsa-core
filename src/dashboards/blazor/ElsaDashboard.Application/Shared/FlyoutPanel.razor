<div x-show="$store.flyoutPanel.show" x-data="{}" x-on:keydown.window.escape="$store.flyoutPanel.show = false" class="fixed z-10 inset-0 overflow-hidden">
    <div class="absolute inset-0 overflow-hidden">
        <section x-on:click.away="$store.flyoutPanel.show = false" class="absolute inset-y-0 right-0 pl-10 max-w-md md:max-w-full flex sm:pl-16">
            <div class="w-screen max-w-2xl" x-description="Slide-over panel, show/hide based on slide-over state." x-show="$store.flyoutPanel.show == true" x-transition:enter="transform transition ease-in-out duration-500 sm:duration-700" x-transition:enter-start="translate-x-full" x-transition:enter-end="translate-x-0" x-transition:leave="transform transition ease-in-out duration-500 sm:duration-700" x-transition:leave-start="translate-x-0" x-transition:leave-end="translate-x-full">
                <div class="h-full flex flex-col bg-white shadow-xl overflow-y-scroll">

                    <div class="flex-1">
                        <!-- Header -->
                        <header class="p-6">
                            <div class="flex items-start justify-between space-x-3">
                                @if (!string.IsNullOrWhiteSpace(Title))
                                {
                                    <h2 class="text-lg leading-7 font-medium text-gray-900">
                                        @Title
                                    </h2>
                                }
                                <div class="h-7 flex items-center">
                                    <button x-on:click="$store.flyoutPanel.show = false" aria-label="Close panel" class="text-gray-400 hover:text-gray-500 transition ease-in-out duration-150">
                                        <svg class="h-6 w-6" x-description="Heroicon name: x" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                                        </svg>
                                    </button>
                                </div>
                            </div>
                        </header>
                        @Content
                    </div>

                    @if (Buttons.Any())
                    {
                        <div class="flex-shrink-0 px-4 py-4 space-x-4 flex justify-end">
                            @{ var buttonKey = 0; }
                            @foreach (var button in Buttons)
                            {
                                var styleClass = button.IsPrimary ? "border-transparent text-white bg-blue-600 hover:bg-blue-500 focus:border-blue-700 active:bg-blue-700" : "border-gray-300 text-gray-700 hover:text-gray-500 focus:border-blue-300 active:bg-gray-50 active:text-gray-800";
                                <span @key="@buttonKey" class="inline-flex rounded-md shadow-sm">
                                    <button @onclick="async () => await OnButtonClickAsync(button)" type="button" class="inline-flex justify-center py-2 px-4 border rounded-md text-sm leading-5 font-medium focus:outline-none focus:shadow-outline-blue transition duration-150 ease-in-out @styleClass">
                                        @button.Text
                                    </button>
                                </span>

                                buttonKey++;
                            }
                        </div>
                    }
                </div>
            </div>
        </section>
    </div>
</div>