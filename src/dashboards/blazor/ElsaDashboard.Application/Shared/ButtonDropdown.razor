<div x-data="{open: false}" x-on:keydown.window.escape="open = false" x-on:click.away="open = false" class="relative">
    <button x-on:click="open = !open" type="button" class="w-full bg-white border border-gray-300 rounded-md shadow-sm px-4 py-2 inline-flex justify-center text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" aria-haspopup="true" aria-expanded="false">
        @RenderIcon()
        @Text
        <svg class="ml-2.5 -mr-1.5 h-5 w-5 text-gray-400" x-description="Heroicon name: chevron-down" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path>
        </svg>
    </button>
    <div x-show="open" class="@OriginClass z-10 absolute mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5">
        <div class="py-1" role="menu" aria-orientation="vertical">
            @if (ChildContent == null)
            {
                foreach (var item in Items)
                {
                    var selectedCssClass = item.IsSelected ? "bg-blue-600 hover:bg-blue-700 text-white" : "hover:bg-gray-100 text-gray-700 hover:text-gray-900";

                    if (item.Url != null)
                    {
                        <a x-on:click="open = false" href="@item.Url" class="block px-4 py-2 text-sm @selectedCssClass" role="menuitem">@item.Text</a>
                    }
                    else
                    {
                        <a href="#" x-on:click="open = false" @onclick="@(() => OnItemClicked(item))" class="block px-4 py-2 text-sm @selectedCssClass" role="menuitem">@item.Text</a>
                    }
                }
            }
            else
            {
                @ChildContent
            }
        </div>
    </div>
</div>