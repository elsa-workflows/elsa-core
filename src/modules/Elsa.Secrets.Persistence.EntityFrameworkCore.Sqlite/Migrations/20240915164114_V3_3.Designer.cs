// <auto-generated />
using System;
using Elsa.Secrets.Persistence.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Elsa.Secrets.Persistence.EntityFrameworkCore.Sqlite.Migrations
{
    [DbContext(typeof(SecretsDbContext))]
    [Migration("20240915164114_V3_3")]
    partial class V3_3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.20");

            modelBuilder.Entity("Elsa.Secrets.Management.Secret", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EncryptedValue")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("ExpiresIn")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsLatest")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LastAccessedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Owner")
                        .HasColumnType("TEXT");

                    b.Property<string>("Scope")
                        .HasColumnType("TEXT");

                    b.Property<string>("SecretId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TenantId")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExpiresAt")
                        .HasDatabaseName("IX_Secret_ExpiresAt");

                    b.HasIndex("LastAccessedAt")
                        .HasDatabaseName("IX_Secret_LastAccessedAt");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Secret_Name");

                    b.HasIndex("Scope")
                        .HasDatabaseName("IX_Secret_Scope");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_Secret_Status");

                    b.HasIndex("TenantId")
                        .HasDatabaseName("IX_Secret_TenantId");

                    b.HasIndex("Version")
                        .HasDatabaseName("IX_Secret_Version");

                    b.ToTable("Secrets");
                });
#pragma warning restore 612, 618
        }
    }
}
