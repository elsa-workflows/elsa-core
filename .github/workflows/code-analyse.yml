name: .NET SonarCloud

on:
  push:
    branches:
      - feature/sonar-cloud
  pull_request:
    branches:
      - feature/sonar-cloud
  workflow_dispatch:
    inputs:
      analyseCode:
        description: 'Analyse code with SonarScanner'
        required: false
        default: 'false'

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be avoided for SonarCloud analysis; depth 0 ensures the full history is fetched

      - name: Set VERSION variable
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* && "${{ github.event_name }}" == "release" && "${{ github.event.action }}" == "published" ]]; then
            TAG_NAME=${{ github.ref }} # e.g., refs/tags/3.0.0
            TAG_NAME=${TAG_NAME#refs/tags/} # remove the refs/tags/ prefix
            echo "VERSION=${TAG_NAME}" >> $GITHUB_ENV
          else
            echo "VERSION=3.2.0-${PACKAGE_PREFIX}.${{github.run_number}}" >> $GITHUB_ENV
          fi
          
      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Install Coverlet for code coverage
        run: dotnet tool install --global coverlet.console

      - name: Begin SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner begin /k:"YOUR_PROJECT_KEY" /o:"elsa-workflows_" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.opencover.reportsPaths="coverage.opencover.xml"

      - name: Compile+Test+Pack
        run: ./build.sh Compile+Test+Pack --version ${VERSION} --analyseCode true

      - name: End SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
