FROM --platform=$BUILDPLATFORM node:19.2-alpine as client-build

WORKDIR /app
COPY /src .

WORKDIR /app/designer/elsa-workflows-studio
ARG NODE_OPTIONS="--max-old-space-size=8192"
RUN npm install --force
RUN npm run build

WORKDIR /app/designer/bindings/aspnet/Elsa.Designer.Components.Web
RUN npm install --force
RUN npm run build

FROM --platform=$BUILDPLATFORM mcr.microsoft.com/dotnet/sdk:7.0-bullseye-slim AS build
WORKDIR /source

# restore packages
COPY ./Nuget.Config ./
COPY ./src/dashboards/ElsaDashboard/ElsaDashboard.Web.csproj ./src/dashboards/ElsaDashboard/ElsaDashboard.Web.csproj
RUN dotnet restore "./src/dashboards/ElsaDashboard/ElsaDashboard.Web.csproj"  --configfile ./Nuget.Config

# copy required source code
COPY src/. ./src
COPY *.props ./
COPY --from=client-build /app/designer/bindings/aspnet/Elsa.Designer.Components.Web ./src/designer/bindings/aspnet/Elsa.Designer.Components.Web

# build and publish (UseAppHost=false created platform independent binaries)
WORKDIR /source/src/dashboards/ElsaDashboard
RUN dotnet build "ElsaDashboard.Web.csproj" -c Release -o /app/build
RUN dotnet publish "ElsaDashboard.Web.csproj" -c Release -o /app/publish /p:UseAppHost=false --no-restore -f net7.0

# move binaries into smaller base image
FROM mcr.microsoft.com/dotnet/aspnet:7.0-bullseye-slim AS base
WORKDIR /app
COPY --from=build /app/publish ./

EXPOSE 80/tcp
EXPOSE 443/tcp
ENTRYPOINT ["dotnet", "ElsaDashboard.Web.dll"]
